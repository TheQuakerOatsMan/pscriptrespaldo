package AnalizadorDOsCero;

public class tablas {
	String [][] tabla1 = 
		{
				{" " ,"identificador","id_ent","abP"  ,"ciP","op_sum"  ,"op_res","op_mult","op_div","id_cad","id_cart","finale"	},
				{"E" ,"T E’"		 ,"T E’"  ,"T E’" ," "  ," "	   ," "	    ," "	  ," "	   ,"T E’"	,"T E’"	  ," "		},
				{"E’"," "			 ," "	  ," "	  ,"ç"  ,"op_sum T E’","op_res T E’","ç"	  ,"ç"	   ," "	 	," "	  ,"ç"		},	
				{"T" ,"F T’"		 ,"F T’"  ,"F T’" ," "  ," "	   ," "	    ," "	  ," "	   ,"F T’"	,"F T’"	  ," "		},
				{"T’"," "			 ," "	  ," "	  ,"ç"  ,"ç"	   ,"ç"		,"op_mult F T’" ,"op_div F T’"," "	 	," "	  ,"ç"		},
				{"F" ,"identificador","id_ent","abP E ciP"," "," "     ," "		," "	  ," "	   ,"id_cad","id_cart"," "		}
		};
	
	String [][] laperrona2 = 
		{
				{" "          	,"del_id"						,"puntcoma"		,"identificador"			,"id_ent"		,"id_dec"		,"id_cad"		,"id_cart"		,"abP"			,"ciP"		,"op_sum"		,"op_res"		,"op_mult"		,"op_div"		,"mod"			,"ala"			,"tallo"			,"op_min"		,"op_may"		,"op_mini"		,"op_mayi"		,"op_compd"		,"op_comp"		,"op_not"	,"op_and"	 	,"op_or"		,"verdadero"	,"falso"		,"cambio"																												,"caso"															,"si"									,"sino"				,"para"							,"mientras"								,"hacer"								,"endprin"	,"endif","endpara"	,"endw" ,"principal"													,"clase"										,"ent"								,"dec"								,"cart"								,"cad"								,"bool"								,"op_asig"								,"proc"																,"func"																		,"endproc"	,"endcam"	,"endf"		,"id_func"						,"retornar"				,"finale"	,"id_clase"	,"inicio"	,"imprime"				,"ejecuta"				,"lectura"},	
				{"clas"			," "							," "			," "						," "			," "			," "			," "			," "			," "		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," " 		," "	 		," " 			," "			," "			," "																													," " 															," " 									," "				," "							," "									," "									," "		," "	," "	 	," "	," "															,"clase id_clase inicio creas modulop finale"	," "								," "								," "								," "								," "								," "									," "																," "																		," "		," "		," "		," "							," "					," "		," "		," "		," "					," "					," "},															
				{"creas"		," "							," "			," "						," "			," "			," "			," "			," "			," "		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," " 		," "	 		," " 			," "			," "			," "																													," "															," " 									," "				," "							," "									," "									," "		," "	," "	 	," "	,"ç"															," "											,"decc creas"						,"decc creas"						,"decc creas"						,"decc creas"						,"decc creas"						," "									,"ç"																,"ç"																		," "		," "		," "		," "							," "					,"ç"		," "		," "		," "					," "					," "},							
				{"decc"			," "							,"ç"			," "						," "			," "			," "			," "			," "			," "		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," " 		," "	 		," " 			," "			," "			," "																													," "															," " 									," "				," "							," "									," "									," "		," "	," "	 	," " 	," "															," "											,"ent identificador sigid puntcoma"	,"dec identificador sigid puntcoma"	,"cart identificador sigid puntcoma","cad identificador sigid puntcoma"	,"bool identificador sigid puntcoma"," "									," "																," "																		," "		," "		,"ç"		," "							," "					," "		," "		," "		," "					," "					," "},					
				{"sigid"		,"del_id identificador sigid"	,"ç"			," "						," "			," "			," "			," "			," "			," "		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," " 		," "	 		," " 			," "			," "			," "																													," "															," " 									," "				," "							," "									," "									," "		," "	," "	 	," "	," "															," "											," "								," "								," "								," "								," "								,"op_asig L sigid"						," "																," "																		," "		," "		," "		," "							," "					," "		," "		," "		," "					," "					," "},										
				{"modulos"		," "							," "			,"ç"						," "			," "			," "			," "			," "			," "		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," " 		," "	 		," " 			," "			," "			," "																													," "															,"ç" 									," "				,"ç"							,"ç"									,"ç"									,"saltar"	,"saltar","saltar","saltar"	," "															," "											,"ç"								,"ç"								,"ç"								,"ç"								,"ç"								," " 									,"procedimiento modulos"											,"funcion modulos"															,"saltar"	,"saltar"	,"saltar"	," "							," "					,"ç"		," "		," "		," "					," "					," "},				
				{"modulop"		," "							," "			,"ç"						," "			," "			," "			," "			," "			," "		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," " 		," "	 		," " 			," "			," "			," "																													," "															,"ç" 									," "				,"ç"							,"ç"									,"ç"									,"ç"		,"ç"	,"ç"	 	,"ç"	,"prin modulos"													," "											,"ç"								,"ç"								,"ç"								,"ç"								,"ç"								," " 									,"procedimiento modulop"											,"funcion modulop"															,"saltar"	,"saltar"	,"saltar"	," "							," "					,"ç"		," "		," "		," "					," "					," "},				
				{"prin"			," "							," "			,"ç"						," "			," "			," "			," "			," "			," "		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," " 		," "	 		," " 			," "			," "			," "																													," "															,"ç" 									," "				,"ç"							,"ç"									,"ç"									,"ç"		,"ç"	,"ç"	 	,"ç"	,"principal clase id_clase inicio sentencias endprin creas"		," "											,"ç"								,"ç"								,"ç"								,"ç"								,"ç"								," " 									,"saltar"															,"saltar"																	,"ç"		,"ç"		," "		," "							," "					," "		," "		," "		," "					," "					," "},				
				{"procedimiento"," "							," "			," "						," "			," "			," "			," "			," "			," "		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," " 		," "	 		," " 			," "			," "			," "																													," "															," " 									," "				," "							," "									," "									," "		," "	," "	 	," "	," "															," "											," "								," "								," "								," "								," "								," " 									,"proc id_func abP list-arg ciP inicio sentencias endproc creas"	," "																		," "		," "		," "		," "							," "					," "		," "		," "		," "					," "					," "},							
				{"fun"			," "							," "			," "						," "			," "			," "			," "			," "			," "		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," " 		," "	 		," " 			," "			," "			," "																													," "															," " 									," "				," "							," "									," "									," "		," "	," "	 	," "	," "															," "											," "								," "								," "								," "								," "								," " 									," "																,"func id_func abP list-arg ciP tiporetorno inicio sentencias endf creas"	," "		," "		," "		," "							," "					," "		," "		," "		," "					," "					," "},								
				{"tiporetorno"	," "							," "			," "						," "			," "			," "			," "			," "			," "		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," " 		," "	 		," " 			," "			," "			," "																													," "															," " 									," "				," "							," "									," "									," "		," "	," "	 	," "	," "															," "											,"ent"								,"dec"								,"cart"								,"cad"								,"bool"								," " 				 					," " 																," " 																		," " 		," " 		," " 		," " 							," " 					," "		," "		," "		," "					," "					," "},		
				{"list-arg"		," "							," "			," "						," "			," "			," "			," "			," "			,"ç"		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," " 		," "	 		," " 			," "			," "			," "																													," "															," " 									," "				," "							," "									," "									," "		," "	," "	 	," "	," "															," "											,"ent identificador siglist"		,"dec identificador siglist"		,"cart identificador siglist"		,"cad identificador siglist"		,"bool identificador siglist"		," "									," "																," "																		," "		," "		," "		," "							," "					," "		," "		," "		," "					," "					," "},												
				{"siglist"		,"del_id list-arg"				," "			," "						," "			," "			," "			," "			," "			,"ç"		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," " 		," "	 		," " 			," "			," "			," "																													," "															," " 									," "				," "							," "									," "									," "		," "	," "	 	," "	," "															," "											," "								," "								," "								," "								," "								,"op_asig list-arg" 					," "																," "																		," "		," "		," "		," "							," "					," "		," "		," "		," "					," "					," "},
				{"list-param"	," "							," "			,"L sig-param"				,"L sig-param"	,"L sig-param"	,"L sig-param"	,"L sig-param"	,"L sig-param"	,"ç"		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," " 		," "	 		," " 			," "			,"L sig-param"	,"L sig-param"																											," "															," " 									," "				," "							," "									," "									," "		," "	," "	 	," "	," "															," "											," "								," "								," "								," "								," "								," " 									," "																," "																		," "		," "		," "		,"L sig-param"					," "					," "		," "		," "		," "					," "					," "}, 			
				{"sig-param"	,"del_id L sig-param"			,"ç"			," "						," "			," "			," "			," "			," "			,"ç"		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," " 		," "	 		," " 			," "			," "			," "																													," "															," " 									," "				," "							," "									," "									," "		," "	," "	 	," "	," "															," "											," "								," "								," "								," "								," "								,"op_asig L sig-param"					," "																," "																		," "		," "		," "		," "							," "					," "		," "		," "		," "					," "					," "},										
				{"sentencias"	," "							,"ç"			,"sentencia sentencias"		," "			," "			," "			," "			," "			," "		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," " 		," "	 		," " 			," "			," "			," "																													," "															,"sentencia sentencias"					,"ç"				,"sentencia sentencias"			,"sentencia sentencias"					,"sentencia sentencias"					,"ç"		,"ç"	,"ç"	 	,"ç"	," "															," "											,"sentencia"						,"sentencia"						,"sentencia"						,"sentencia"						,"sentencia"						," " 									," "																," "																		,"ç"		,"ç"		,"ç"		," "							,"sentencia sentencias"	,"saltar"	,"saltar"	,"saltar"	,"sentencia sentencias"	,"sentencia sentencias"	,"sentencia sentencias"},	
				{"sentencia"	," "							," "			,"asigna puntcoma"			," "			," "			," "			," "			," "			," "		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," " 		," "	 		," " 			," "			," "			,"cambio abP id ciP inicio caso abP L ciP op_cond sentencias sigcaso default op_cond sentencias ruptura puntcoma endcam"," "															,"si L inicio sentencias sigif endif"	," "				,"para L inicio sentencias endpara"	,"mientras L inicio sentencias endw","hacer sentencias mientras L puntcoma"	," "		," "	," "	 	," "	," "															," "											,"decc sentencias"					,"decc sentencias"					,"decc sentencias"  				,"dec sentencias"					,"decc sentencias"					," "									," "																," "																		," "		," "		," "		,"asigna puntcoma"				," "					,"ç"		," "		," "		,"asigna puntcoma"		,"asigna puntcoma"		,"asigna puntcoma"},
				{"sigcaso"		," "							," "			," "						," "			," "			," "			," "			," "			," "		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," " 		," "	 		," " 			," "			," "			," "																													,"caso abP L ciP op_cond sentencias ruptura puntcoma sigcaso"	," "									," "				," "							," " 									," " 									," "		," " 	," "	 	," "	," " 															," "											," "								," "								," "								," " 								," "								," "									," "																," "																		," "		," "		," "		," "							," "					," "		," "		," "		," "					," "					," "}, 																												
				{"sigif"		," "							," "			," "						," "			," "			," "			," "			," "			," "		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," "		," "	 		," " 			," "			," "			," "																													," "															," "									,"sino sentencias"	," "							," "									," "									," "		,"ç"	," "	 	," "	," "															," "											," "								," "								," "								," "								," "								," "				 					," "																," "																		,"sacar"	," "		," "		," "							," "					," "		," "		," "		," "					," "					," "},																			
				{"asigna"		," "							," "			,"identificador op_asig L"	," "			," "			," "			," "			," "			," "		," "			," "			," "			," "			," "			," "			," "				," "			," "			," " 			," " 			," " 			," " 			," " 		," "	 		," " 			," "			," "			," "																													," "															," "									," "				," "							," "									," "									," "		," "	," "	 	," "	," "															," "											," "								," "								," "								," "								," "								," "				 					," "																," "																		," "		," "		," "		," "							,"retornar L"			," "		," "		," "		,"imprime abP Z ciP "	,"ejecuta L"			,"lectura abP Z ciP"},				
				{"L"			," "							,"sacar"		,"R L’"						,"R L’"			,"R L’"			,"R L’"			,"R L’"			,"R L’"			,"saltar"	,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"R L’"			,"R L’"				," "			," "			," " 			," " 			," " 			," " 			,"op_not L"	," "	 		," " 			,"R L’"			,"R L’"			," "																													," "															," "									," "				," "							," "									," "									,"sacar"	,"sacar","sacar"	,"sacar"," "															," "											," "								," "								," "								," "								," "								," "				 					," "																," "																		,"sacar"	,"sacar"	,"sacar"	,"R L’"							," "					,"sacar"	," "		,"sacar"	," "					," "					," "},											
				{"L’"			,"ç"							,"ç"			,"saltar"					,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"ç"		,"ç"			,"ç"			,"ç"			,"ç"			,"ç"			,"saltar"		,"saltar"			,"ç"			,"ç"			,"ç" 			,"ç" 			,"ç" 			,"ç" 			," "		,"op_and R L’"	,"op_or R L’"	," "			," "			," "																													," "															," "									," "				," "							," "									,"ç"									,"ç"		,"ç"	,"ç"	 	,"ç"	," "															," "											," "								," "								," "								," "								," "								," "				 					," "																," "																		,"ç"		,"ç"		,"ç"		,"saltar"						," "					,"ç"		," "		,"ç"		," "					," "					," "},																											
				{"R"			," "							,"sacar"		,"E R’"						,"E R’"			,"E R’"			,"E R’"			,"E R’"			,"E R’"			,"saltar"	,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"E R’" 		,"E R’" 			," "			," "			," " 			," " 			," " 			," " 			," " 		,"ç" 	 		,"ç"  			,"E R’"			,"E R’"			," "																													," "															," "									," "				," "							," "									,"ç"									,"sacar"	,"sacar","sacar"	,"sacar"," "															," "											," "								," "								," "								," "								," "								," "				 					," "																," "																		,"sacar"	,"sacar"	,"sacar"	,"E R’"							," "					,"sacar"	," "		,"sacar"	," "					," "					," "},
				{"R’"			,"ç"							,"ç"			,"saltar"					,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"ç"		,"ç"			,"ç"			,"ç"			,"ç"			,"ç"			,"saltar"		,"saltar"			,"op_min T E'"	,"op_may T E’"	,"op_mini T E’"	,"op_mayi T E’"	,"op_compd T E’","op_comp T E’"	," "		,"ç"	 		,"ç"			," "			," "			," "																													," "															," "									," "				," "							," "									,"ç"									,"ç"		,"ç"	,"ç"	 	,"ç"	," "															," "											," "								," "								," "								," "								," "								," "				 					," "																," "																		,"ç"		,"ç"		,"ç"		,"saltar"						," "					,"ç"		," "		,"ç"		," "					," "					," "},									
				{"E"			," "							,"sacar"		,"T E’"						,"T E’"			,"T E’"			,"T E’"			,"T E’"			,"T E’"			,"saltar"	,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"saltae"		,"T E’"			,"T E’"				," "			," "			," " 			," " 			," " 			," " 			," "		," "	 		," "			,"T E’"			,"T E’"			," "																													," "															," "									," "				," "							," "									," "									,"sacar"	,"sacar","sacar"	,"sacar"," "															," "											," "								," "								," "								," "								," "								," "				 					," "																," "																		,"sacar"	,"sacar"	,"sacar"	,"T E’"							," "					,"sacar"	," "		,"sacar"	," "					," "					," "},															
				{"E’"			,"ç"							,"ç"			,"saltar"					,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"ç"		,"op_sum T E’"	,"op_res T E’"	,"ç"			,"ç"			,"ç"			,"saltar"		,"saltar"			,"ç"			,"ç"			,"ç" 			,"ç" 			,"ç" 			,"ç" 			," "		,"ç"	 		,"ç"			," "			," "			," "																													," "															," "									," "				," "							," "									,"ç"									,"ç"		,"ç"	,"ç"	 	,"ç"	," "															," "											," "								," "								," "								," "								," "								," "				 					," "																," "																		,"ç"		,"ç"		,"ç"		,"saltar"						," "					,"ç"		," "		,"ç"		," "					," "					," "},																		
				{"T"			," "							,"sacar"		,"F T’"						,"F T’"			,"F T’"			,"F T’"			,"F T’"			,"F T’"			,"saltar"	,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"F T’"			,"F T’"				," "			," "			," " 			," " 			," " 			," " 			," "		," "	 		," "			,"F T’"			,"F T’"			," "																													," "															," "									," "				," "							," "									," "									,"sacar"	,"sacar","sacar"	,"sacar"," "															," "											," "								," "								," "								," "								," "								," "				 					," "																," "																		,"sacar"	,"sacar"	,"sacar"	,"F T’"							," "					,"sacar"	," "		,"sacar"	," "					," "					," "},																														
				{"T’"			,"ç"							,"ç"			,"saltar"					,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"ç"		,"ç"			,"ç"			,"op_mult F T’"	,"op_div F T’"	,"mod F T’"		,"saltar"		,"ç"				,"ç"			,"ç"			,"ç"			,"ç" 			,"ç" 			,"ç"			,"ç"		,"ç"	 		," "			," "			," "			," "																													," "															," "									," "				," "							," "									,"ç"									,"ç"		,"ç"	,"ç"	 	,"ç"	," "															," "											," "								," "								," "								," "								," "								," " 									," "																," "																		,"ç"		,"ç"		,"ç"		,"saltar"						,"ç"					,"ç"		," "		,"ç"		," "					," "					," "},											
				{"Z"			," "							,"sacar"		,"L Z’"						,"L Z’"			,"L Z’"			,"L Z’"			,"L Z’"			,"L Z’"			,"saltar"	,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"L Z’"			,"L Z’"				," "			," "			," " 			," " 			," " 			," " 			," "		," "	 		," "			," "			," "			," "																													," "															," "									," "				," "							," "									," "									,"sacar"	,"sacar","sacar"	,"sacar"," "															," "											," "								," "								," "								," "								," "								," "				 					," "																," "																		,"sacar"	,"sacar"	,"sacar"	," "							," "					,"sacar"	," "		,"sacar"	," "					," "					," "},																														
				{"Z’"			,"ç"							,"ç"			,"saltar"					,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"saltar"		,"ç"		,"ç"			,"ç"			,"op_mult F T’"	,"op_div F T’"	,"mod F T’"		,"saltar"		,"ç"				,"ç"			,"ç"			,"ç"			,"ç" 			,"ç" 			," "			,"ç"		,"ç"	 		," "			," "			," "			," "																													," "															," "									," "				," "							," "									,"ç"									,"ç"		,"ç"	,"ç"	 	,"ç"	," "															," "											," "								," "								," "								," "								," "								," " 									," "																," "																		,"ç"		,"ç"		,"ç"		,"saltar"						,"ç"					,"ç"		," "		,"ç"		," "					," "					," "},											
				{"F"			," "							," "			,"identificador"			,"id_ent"		,"id_dec"		,"id_cad"		,"id_cart"		,"abP L ciP"	,"saltar"	,"saltar"		,"saltar"		," "			," "			,"saltar"		,"ala abP L ciP","tallo abP L ciP"	," "			," "			," " 			," " 			," " 			," " 			," "		," "	 		," "			,"verdadero"	,"falso"		," "																													," "															," "									," "				," "							," "									," "									," "		," "	," "	 	," "	," "															," "											," "								," "								," "								," "								," "								," "									," "																," "																		," "		," "		," "		,"id_func abP list-param ciP"	," "					," "		," "		," "		," "					," "					," "},		};

}
